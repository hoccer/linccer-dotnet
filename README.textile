h1. Linccer API for .Net

h2. Description  

The .Net Linccer binding provides a non threaded API to communicate with
the RESTful Linccer Services:

bc.. 
 Linccer linccer = new Linccer ();
linccer.Config = new ClientConfig ("C# Demo");

// publish a gps position
linccer.Gps = new LocationInfo { Latitude = 52.5157, Longitude = 13.409, Accuracy = 1000 };
linccer.SubmitEnvironment ();

// pass data to an other client here and now
MyDataClass data = new MyDataClass(...); 
linccer.share("one-to-one", data);

// receive passed data from an other client here and now
MyDataClass receivedData = linccer.receive<MyDataClass>("one-to-one");

p. More examples can be found in the Demo projects.

h2. Install and try out

* download our "prebuild binaries":https://github.com/downloads/hoccer/linccer-dotnet/linccer-dotnet.zip
* write some java code using the Linccer (get inspired by the Demos)
* compile and run

h2. Deployment

* obtain your own API Key from "developer.hoccer.com":http://developer.hoccer.com
* use a ClientConfig constructor apiKey and sharedSecret parameters
* switch to production servers with @linccer.Config.UseProductionServers ();@

h2. Remarks

* The environment updates (gps, network, bssid's,...) must be updated regular (at least every ten seconds).
* To transfer data between two partners their share and receive must use the same mode (eg. one-to-one or one-to-many)
* both clients must use the same server (eg. Production or Sandbox)

h2. Additional Features

h3. Environment Updates

Make sure the Linccer has as much environment data of the client as possible. Use all available sensors. If you implement for a stationary devices, you should read gps, wifi bssids and the like from a config file.

h3. Wait for data

The default behavior of Linccer makes sure you get a "no content" message for "lonely receives".
When receiving in 'one-to-many' mode, it's possible to add the option "waiting=true" to hold the connection until content is available. This is useful for devices which automaticly want to receive all distributed data (eg. photowall, party-music-player, geo chat, ...).

h2. Trouble Shooting

h3. Authorization Problems on Ubuntu/Linux?

bc.. 
$ sudo mozroots --machine --import --sync
$ mozroots --sync --import

h2. Licensing

This code is dual licensed (commercial and GPL v3). See LICENSE file for more informations about the GPL. Alternative licensing without the obligations of the GPL is available upon request.

h2. Further Reading

Please check the general "Linccer documentation":http://developer.hoccer.com/about_api.html.

